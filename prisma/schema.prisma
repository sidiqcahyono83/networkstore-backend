generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  username    String    @unique
  password    Password?
  fullname    String?
  address     String?
  phoneNumber String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  Area       Area[]
  Modem      Modem[]
  pembayaran Pembayaran[]
}

model Password {
  id     String @id @default(cuid())
  hash   String
  use    User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Customer {
  id          String  @id @default(cuid())
  username    String? @unique
  fullname    String?
  address     String?
  phonenumber String?
  ontName     String?
  redamanOlt  String?
  diskon      Int     @default(0)
  ppn         Int?    @default(0)

  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  paket      Paket?       @relation(fields: [paketId], references: [id])
  paketId    String?
  area       Area?        @relation(fields: [areaId], references: [id])
  areaId     String?
  odp        Odp?         @relation(fields: [odpId], references: [id])
  odpId      String?
  modem      Modem?       @relation(fields: [modemId], references: [id])
  modemId    String?
  pembayaran Pembayaran[]
}

model Paket {
  id        String     @id @default(cuid())
  name      String
  harga     Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  customer  Customer[]
}

model Area {
  id        String     @id @default(cuid())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  customer  Customer[]
  odp       Odp[]
  user      User[]
}

model Odp {
  id            String     @id @default(cuid())
  name          String
  rasio         String?
  pasiveSpliter String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  customer      Customer[]
  area          Area?      @relation(fields: [areaId], references: [id], onDelete: Cascade)
  areaId        String?
}

model Modem {
  id     String @id @default(cuid())
  name   String
  serial String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderBy  User[]
  customer Customer[]
}

model Pembayaran {
  id      String   @id @default(cuid())
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String
  periode DateTime @default(now())

  metode     String @default("Cash")
  totalBayar Float

  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, periode, customerId])
}
